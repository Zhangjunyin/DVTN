function net = fcn_init(varargin)

opts.batchNormalization = true;
opts.networkType = 'simplenn';
opts = vl_argparse(opts,varargin);

rng('default');
rng(0);


f = 1/100;
net.layers = {};
net.layers{end + 1} = struct('type', 'conv', ...
                             'filters', {f*randn(3,3,9,64, 'single' )}, ...
                             'biases', {f*randn(1,64, 'single' )}, ...
                             'stride', 1, ...
                             'pad', 0);

net.layers{end + 1} = struct('type','relu') ;

net.layers{end + 1} = struct('type', 'conv', ...
                             'filters', {f*randn(3,3,64,128, 'single')}, ...
                             'biases', {f*randn(1,128, 'single' )}, ...
                             'stride', 1, ...
                             'pad', 0);

  net.layers{end + 1} = struct('type','relu') ;
 % 
% 
 net.layers{end + 1} = struct('type', 'conv', ...
                              'filters', {f*randn(3,3,128,256, 'single')}, ...
                              'biases', {f*randn(1,256, 'single' )}, ...
                              'stride', 1, ...
                              'pad', 0);
 
 net.layers{end + 1} = struct('type','relu') ;
% 
 net.layers{end + 1} = struct('type', 'conv', ...
                              'filters', {f*randn(3,3,256,256, 'single')}, ...
                              'biases', {f*randn(1,256, 'single' )}, ...
                              'stride', 1, ...
                              'pad', 0);
% 
 net.layers{end + 1} = struct('type','relu') ;
%}
 net.layers{end + 1} = struct('type', 'conv', ...
                              'filters', {f*randn(3,3,256,256, 'single')}, ...
                              'biases', {f*randn(1,256, 'single' )}, ...
                              'stride', 1, ...
                              'pad', 0);

net.layers{end + 1} = struct('type', 'conv', ...
                             'filters', {f*randn(1,1,256,1, 'single')}, ...
                             'biases', zeros(1,1, 'single'), ...
                             'stride', 1, ...
                             'pad', 0) ; 
net.layers{end + 1} = struct('type', 'sigmoidcrossentropyloss') ;

%net.normalization = net_old.normalization;
